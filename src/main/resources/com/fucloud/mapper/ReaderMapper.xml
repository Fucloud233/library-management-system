<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fucloud.mapper.ReaderMapper">
    <!-- 插入新的读者角色（id是自增不需要插入）-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.fucloud.pojo.Reader">
        insert into reader (name, phone, role_id)
        values (#{name}, #{number}, #{duration})
    </insert>

    <update id="update">
        update reader
        <set>
            <if test="name!=null">name=#{name},</if>
            <if test="phone!=null">phone=#{phone},</if>
            <if test="role_id!=null">role_id=#{role_id},</if>
        </set>
        where id = #{id}
    </update>

    <sql id="commonSelect">
        select id, name, phone, role_id from reader
    </sql>

    <select id="list" resultType="com.fucloud.pojo.Reader">
        <include refid="commonSelect" />
    </select>

    <!-- 读者与其身份多表查询 -->
    <resultMap id="readerMap" type="com.fucloud.pojo.Reader">
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
        <result property="phone" column="phone"></result>

        <association property="role" javaType="com.fucloud.pojo.ReaderRole">
            <id property="id" column="rid"></id>
            <result property="name" column="rname"></result>
        </association>
    </resultMap>

    <select id="query" resultMap="readerMap">
        <!-- 这里需要起别名，才能被resultMap捕获 -->
        select reader.id, reader.name, reader.phone, role.id as rid, role.name as rname
        from reader, reader_role as role
        <where>
            reader.role_id = role.id
            <if test="reader.id!=null">and reader.id = #{reader.id}</if>
            <if test="reader.name!=null">and reader.name like CONCAT('%',#{reader.name},'%')</if>
            <if test="reader.phone!=null">and phone like CONCAT('%',#{reader.phone},'%')</if>
            <if test="reader.role.id!=null">and role_id=#{reader.role.id}</if>
        </where>
        order by reader.id
        limit #{pageNum}, #{pageSize}
    </select>

    <select id="count" resultType="Integer">
        select count(*) from reader
    </select>

    <select id="countWithCondition" resultType="Integer">
        select count(*) from reader
        <where>
            <if test="id!=null">and id = #{id}</if>
            <if test="name!=null">and name like CONCAT('%',#{name},'%')</if>
            <if test="phone!=null">and phone like CONCAT('%',#{phone},'%')</if>
            <if test="role.id!=null">and role_id=#{role.id}</if>
        </where>
    </select>

</mapper>